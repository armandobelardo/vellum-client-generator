openapi: 3.0.3
info:
  title: Vellum API
  version: 1.0.0 (v1)
  description: Documentation of internal API endpoints of Vellum
paths:
  /ad-hoc/generate:
    post:
      operationId: adHocGenerate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdHocGenerateRequestRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocGenerateResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocGenerateErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocGenerateErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdHocGenerateErrorResponse'
          description: ''
  /completions:
    get:
      operationId: list
      x-request-name: ListCompletionsRequest
      parameters:
      - in: query
        name: deployment
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - completions
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompletionReadList'
          description: ''
  /deployments:
    get:
      operationId: list
      x-request-name: ListDeploymentsRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - deployments
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeploymentReadList'
          description: ''
    post:
      operationId: create
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreateRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentCreationError'
          description: ''
  /deployments/{id}:
    get:
      operationId: retrieve
      x-request-name: RetrieveDeploymentRequest
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      tags:
      - deployments
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentUpdateRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeploymentUpdateRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      tags:
      - deployments
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /deployments/{id}/history:
    get:
      operationId: listHistory
      x-request-name: ListDeploymentHistoryRequest
      description: List history records for a deployment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - deployments
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeploymentHistoryItemList'
          description: ''
  /deployments/{id}/history/{history_id}/revert:
    post:
      operationId: revertToHistoryItem
      description: Revert a deployment to a previous history item
      parameters:
      - in: path
        name: history_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying the deployment history item you'd like
          to revert to.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      tags:
      - deployments
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
  /document-indexes:
    get:
      operationId: list
      x-request-name: ListDocumentIndexesRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/SandboxStatus'
        description: The current status of the document index
      tags:
      - document-indexes
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentIndexReadList'
          description: ''
    post:
      operationId: create
      tags:
      - document-indexes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIndexWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
  /document-indexes/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document index.
        required: true
      tags:
      - document-indexes
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document index.
        required: true
      tags:
      - document-indexes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIndexWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document index.
        required: true
      tags:
      - document-indexes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentIndexWriteRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document index.
        required: true
      tags:
      - document-indexes
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /document-to-document-indexes:
    get:
      operationId: list
      x-request-name: ListDocumentToDocumentIndexesRequest
      parameters:
      - in: query
        name: document_id
        schema:
          type: string
          format: uuid
      - in: query
        name: document_index_id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - document-to-document-indexes
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentToDocumentIndexList'
          description: ''
  /document-to-document-indexes/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document to document index.
        required: true
      tags:
      - document-to-document-indexes
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentToDocumentIndex'
          description: ''
  /documents:
    get:
      operationId: list
      x-request-name: ListDocumentsRequest
      parameters:
      - in: query
        name: document_index_id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/DocumentStatus'
        description: The current status of the document
      tags:
      - documents
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimDocumentList'
          description: ''
    post:
      operationId: create
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
  /documents/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /evaluate-metric:
    post:
      operationId: evaluationMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationMetricRequestRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationMetricResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationMetricErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationMetricErrorResponse'
          description: ''
  /generate:
    post:
      operationId: generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequestBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
  /metabase/signed-url:
    post:
      operationId: createSignedUrl
      tags:
      - metabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetabaseSignedUrlRequestRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetabaseSignedUrlResponse'
          description: ''
  /model-versions:
    get:
      operationId: list
      x-request-name: ListModelVersionsRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - model-versions
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModelVersionReadList'
          description: ''
    post:
      operationId: create
      tags:
      - model-versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelVersionWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersionRead'
          description: ''
  /model-versions/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this model version.
        required: true
      tags:
      - model-versions
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersionRead'
          description: ''
  /organizations/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - organizations
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationWriteRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
          description: ''
  /private:
    get:
      operationId: retrieve
      tags:
      - private
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /private-post:
    post:
      operationId: create
      tags:
      - private-post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /private-scoped:
    get:
      operationId: retrieve
      tags:
      - private-scoped
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /provider-credentials:
    get:
      operationId: list
      x-request-name: ListProviderCredentialsRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: provider
        schema:
          $ref: '#/components/schemas/ProviderEnum'
      tags:
      - provider-credentials
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderCredentialReadList'
          description: ''
    post:
      operationId: create
      tags:
      - provider-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderCredentialWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderCredentialRead'
          description: ''
  /provider-credentials/{id}:
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider credential.
        required: true
      tags:
      - provider-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderCredentialWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderCredentialRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider credential.
        required: true
      tags:
      - provider-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProviderCredentialWriteRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderCredentialRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider credential.
        required: true
      tags:
      - provider-credentials
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /public:
    get:
      operationId: retrieve
      tags:
      - public
      security:
      - jwtTokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /sandbox-snapshot-to-sandbox-tags:
    post:
      operationId: create
      tags:
      - sandbox-snapshot-to-sandbox-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxSnapshotToSandboxTagWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxSnapshotToSandboxTagRead'
          description: ''
  /sandbox-snapshot-to-sandbox-tags/{id}:
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox snapshot to sandbox tag.
        required: true
      tags:
      - sandbox-snapshot-to-sandbox-tags
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /sandbox-snapshots:
    get:
      operationId: list
      x-request-name: ListSandboxSnapshotsRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: sandbox
        schema:
          type: string
          format: uuid
      - in: query
        name: tag_names
        schema:
          type: string
        description: A name that uniquely identifies this tag within its sandbox
      tags:
      - sandbox-snapshots
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSandboxSnapshotList'
          description: ''
    post:
      operationId: create
      tags:
      - sandbox-snapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxSnapshotWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxSnapshot'
          description: ''
  /sandbox-snapshots/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox snapshot.
        required: true
      tags:
      - sandbox-snapshots
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxSnapshot'
          description: ''
  /sandbox-tags:
    get:
      operationId: list
      x-request-name: ListSandboxTagsRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: sandbox_id
        schema:
          type: string
          format: uuid
        description: The sandbox this tag belongs to
      tags:
      - sandbox-tags
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSandboxTagReadList'
          description: ''
    post:
      operationId: create
      tags:
      - sandbox-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxTagWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxTagRead'
          description: ''
  /sandbox-tags/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox tag.
        required: true
      tags:
      - sandbox-tags
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxTagRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox tag.
        required: true
      tags:
      - sandbox-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxTagWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxTagRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox tag.
        required: true
      tags:
      - sandbox-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSandboxTagWriteRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxTagRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox tag.
        required: true
      tags:
      - sandbox-tags
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /sandboxes:
    get:
      operationId: list
      x-request-name: ListSandboxesRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/SandboxStatus'
      tags:
      - sandboxes
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSandboxReadList'
          description: ''
    post:
      operationId: create
      tags:
      - sandboxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxRead'
          description: ''
  /sandboxes/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      tags:
      - sandboxes
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      tags:
      - sandboxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      tags:
      - sandboxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSandboxWriteRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      tags:
      - sandboxes
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /search:
    post:
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
  /submit-completion-actuals:
    post:
      operationId: submitCompletionActuals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCompletionActualsRequestRequest'
        required: true
      security:
      - apiKeyAuth: []
      - jwtTokenAuth: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
  /test-suites:
    get:
      operationId: list
      x-request-name: ListTestSuitesRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - test-suites
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTestSuiteReadList'
          description: ''
    post:
      operationId: create
      tags:
      - test-suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteCreateRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRead'
          description: ''
  /test-suites/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      tags:
      - test-suites
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      tags:
      - test-suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteUpdateRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      tags:
      - test-suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTestSuiteUpdateRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRead'
          description: ''
  /upload-document:
    post:
      operationId: uploadDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadDocumentRequestBodyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UploadDocumentRequestBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
  /users:
    get:
      operationId: list
      x-request-name: ListUsersRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /users/{username}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/me:
    get:
      operationId: retrieveMe
      tags:
      - users
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /workspace-api-keys:
    get:
      operationId: list
      x-request-name: ListWorkspaceAPIKeysRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - workspace-api-keys
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceAPIKeyList'
          description: ''
    post:
      operationId: create
      tags:
      - workspace-api-keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceAPIKeyCreateRequestRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceAPIKeyCreateResponse'
          description: ''
  /workspace-api-keys/{prefix}:
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: prefix
        schema:
          type: string
        required: true
      tags:
      - workspace-api-keys
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /workspaces:
    get:
      operationId: list
      x-request-name: ListWorkspacesRequest
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: my_org_only
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - workspaces
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceReadList'
          description: ''
    post:
      operationId: create
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: ''
  /workspaces/{id}:
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - workspaces
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: ''
    put:
      operationId: update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceWriteRequest'
        required: true
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: ''
    patch:
      operationId: partialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceWriteRequest'
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: ''
    delete:
      operationId: destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - workspaces
      security:
      - jwtTokenAuth: []
      responses:
        '204':
          description: No response body
  /workspaces/{id}/set-active:
    post:
      operationId: setActiveWorkspace
      description: Updates a user's active workspace in Auth0
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - workspaces
      security:
      - jwtTokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    AdHocGenerateErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    AdHocGenerateParametersRequest:
      type: object
      properties:
        temperature:
          type: number
          format: double
          maximum: 5
          minimum: 0
        max_tokens:
          type: integer
          minimum: 1
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_p:
          type: number
          format: double
          maximum: 1
          minimum: 0
        top_k:
          type: number
          format: double
          maximum: 500
          minimum: 0
          default: 0.0
        frequency_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        presence_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
      required:
      - frequency_penalty
      - max_tokens
      - presence_penalty
      - stop
      - temperature
      - top_p
    AdHocGeneratePromptConfigRequest:
      type: object
      properties:
        template:
          type: string
          minLength: 1
      required:
      - template
    AdHocGenerateRequestRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        model_id:
          type: string
          minLength: 1
        model_params:
          $ref: '#/components/schemas/AdHocGenerateParametersRequest'
        prompt_config:
          $ref: '#/components/schemas/AdHocGeneratePromptConfigRequest'
        input_values:
          type: object
          additionalProperties: {}
      required:
      - input_values
      - model_id
      - model_params
      - prompt_config
      - provider
    AdHocGenerateResponse:
      type: object
      properties:
        completion:
          $ref: '#/components/schemas/Completion'
      required:
      - completion
    Completion:
      type: object
      properties:
        text:
          type: string
      required:
      - text
    CompletionCompletionActual:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        timestamp:
          type: string
          format: date-time
        text:
          type: string
          nullable: true
        quality:
          type: number
          format: double
          nullable: true
      required:
      - id
      - timestamp
    CompletionDeployment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
    CompletionModelVersion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
    CompletionRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
        input_values:
          type: object
          additionalProperties: {}
        prompt:
          type: string
          readOnly: true
        output:
          type: string
        deployment:
          $ref: '#/components/schemas/CompletionDeployment'
        model_version:
          $ref: '#/components/schemas/CompletionModelVersion'
        latest_actual:
          $ref: '#/components/schemas/CompletionCompletionActual'
          nullable: true
          readOnly: true
      required:
      - deployment
      - id
      - input_values
      - latest_actual
      - model_version
      - output
      - prompt
      - timestamp
    DeploymentCreateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of model this deployment serves
        model_version_id:
          type: string
          format: uuid
      required:
      - label
      - model_type
      - model_version_id
      - name
    DeploymentCreationError:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    DeploymentHistoryItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        deployment_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of model this deployment serves
        active_model_version_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
      required:
      - active_model_version_ids
      - created
      - deployment_id
      - id
      - is_active
      - label
      - model_type
      - name
      - timestamp
    DeploymentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of model this deployment serves
        active_model_version_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
      required:
      - active_model_version_ids
      - created
      - id
      - label
      - model_type
      - name
    DeploymentStatus:
      enum:
      - ACTIVE
      - INACTIVE
      - ARCHIVED
      type: string
    DeploymentUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the deployment
          maxLength: 150
        model_version_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The current status of the deployment
      required:
      - label
      - model_version_id
    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        label:
          type: string
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 150
        external_id:
          type: string
          nullable: true
          description: The unique id of this document as it exists in the user's system.
            If not provided, will be set to the document's id.
          maxLength: 250
      required:
      - id
      - label
    DocumentCreateRequest:
      type: object
      properties:
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The unique id of this document as it exists in the user's system.
            If not provided, will be set to the document's id.
          maxLength: 250
        contents:
          type: string
          format: binary
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 150
        add_to_index_names:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
      required:
      - contents
      - label
    DocumentDocumentToDocumentIndex:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document_index_id:
          type: string
          format: uuid
          readOnly: true
        indexing_state:
          $ref: '#/components/schemas/IndexingStateEnum'
          description: The indexing state of the document for the document index
      required:
      - document_index_id
      - id
    DocumentIndexRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the document index.
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          $ref: '#/components/schemas/SandboxStatus'
          description: The current status of the document index
      required:
      - created
      - id
      - label
      - name
    DocumentIndexWriteRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document index.
          maxLength: 150
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          $ref: '#/components/schemas/SandboxStatus'
          description: The current status of the document index
      required:
      - label
      - name
    DocumentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          nullable: true
          description: The unique id of this document as it exists in the user's system.
            If not provided, will be set to the document's id.
          maxLength: 250
        last_uploaded_at:
          type: string
          format: date-time
        label:
          type: string
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 150
        processing_state:
          $ref: '#/components/schemas/ProcessingStateEnum'
          description: The current processing state of the document
        status:
          $ref: '#/components/schemas/DocumentStatus'
          description: The current status of the document
        original_file_url:
          type: string
          nullable: true
          readOnly: true
        document_to_document_indexes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDocumentToDocumentIndex'
      required:
      - document_to_document_indexes
      - id
      - label
      - last_uploaded_at
      - original_file_url
    DocumentStatus:
      enum:
      - ACTIVE
      type: string
    DocumentToDocumentIndex:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document_id:
          type: string
          format: uuid
        document_index_id:
          type: string
          format: uuid
        indexing_state:
          $ref: '#/components/schemas/IndexingStateEnum'
          description: The indexing state of the document for the document index
      required:
      - document_id
      - document_index_id
      - id
    DocumentUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 150
        status:
          $ref: '#/components/schemas/DocumentStatus'
          description: The current status of the document
      required:
      - label
    EnrichedNormalizedCompletion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        external_id:
          type: string
          nullable: true
        text:
          type: string
        finish_reason:
          $ref: '#/components/schemas/FinishReasonEnum'
        logprobs:
          $ref: '#/components/schemas/NormalizedLogProbs'
          nullable: true
        model_version_id:
          type: string
      required:
      - finish_reason
      - id
      - model_version_id
      - text
    EvaluationMetricConfigRequest:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/MetricEnum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - config
      - metric
    EvaluationMetricErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    EvaluationMetricInputParamsRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - params
    EvaluationMetricRequestRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/EvaluationMetricConfigRequest'
        input_params:
          $ref: '#/components/schemas/EvaluationMetricInputParamsRequest'
        text:
          type: string
          minLength: 1
      required:
      - config
      - input_params
      - text
    EvaluationMetricResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/MetricResult'
      required:
      - result
    EvaluationMetricResultStatus:
      enum:
      - pending
      - fulfilled
      - rejected
      - stale
      type: string
    FinishReasonEnum:
      enum:
      - LENGTH
      - STOP
      - UNKNOWN
      type: string
    GenerateErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    GenerateOptionsRequest:
      type: object
      properties:
        logprobs:
          $ref: '#/components/schemas/LogprobsEnum'
    GenerateRequestBodyRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
        deployment_name:
          type: string
          nullable: true
          minLength: 1
        requests:
          type: array
          items:
            $ref: '#/components/schemas/GenerateRequestRequest'
        options:
          $ref: '#/components/schemas/GenerateOptionsRequest'
          nullable: true
      required:
      - requests
    GenerateRequestRequest:
      type: object
      properties:
        input_values:
          type: object
          additionalProperties: {}
        external_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
      required:
      - input_values
    GenerateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenerateResult'
      required:
      - results
    GenerateResult:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GenerateResultData'
        error:
          $ref: '#/components/schemas/GenerateResultError'
    GenerateResultData:
      type: object
      properties:
        completions:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedNormalizedCompletion'
      required:
      - completions
    GenerateResultError:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    IndexingStateEnum:
      enum:
      - AWAITING_PROCESSING
      - QUEUED
      - INDEXING
      - INDEXED
      - FAILED
      type: string
    LogprobsEnum:
      enum:
      - ALL
      - NONE
      type: string
    MetabaseSignedUrlRequestRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
        theme_mode:
          $ref: '#/components/schemas/ThemeModeEnum'
      required:
      - deployment_id
      - theme_mode
    MetabaseSignedUrlResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    MetricEnum:
      enum:
      - EXACT_MATCH
      - REGEX_MATCH
      - SEMANTIC_SIMILARITY
      type: string
    MetricResult:
      type: object
      properties:
        score:
          type: number
          format: double
        normalized_score:
          type: number
          format: double
      required:
      - normalized_score
      - score
    ModelTypeEnum:
      enum:
      - GENERATE
      - CLASSIFY
      type: string
    ModelVersionBuildConfig:
      type: object
      properties:
        base_model:
          type: string
        sandbox_snapshot:
          $ref: '#/components/schemas/ModelVersionSandboxSnapshot'
          nullable: true
      required:
      - base_model
    ModelVersionBuildConfigRequest:
      type: object
      properties:
        base_model:
          type: string
          minLength: 1
        sandbox_snapshot:
          $ref: '#/components/schemas/ModelVersionSandboxSnapshotRequest'
          nullable: true
      required:
      - base_model
    ModelVersionExecConfigParameters:
      type: object
      properties:
        temperature:
          type: number
          format: double
          maximum: 5
          minimum: 0
        max_tokens:
          type: integer
          minimum: 1
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_p:
          type: number
          format: double
          maximum: 1
          minimum: 0
        top_k:
          type: number
          format: double
          maximum: 500
          minimum: 0
          default: 0.0
        frequency_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        presence_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
      required:
      - frequency_penalty
      - max_tokens
      - presence_penalty
      - stop
      - temperature
      - top_p
    ModelVersionExecConfigParametersRequest:
      type: object
      properties:
        temperature:
          type: number
          format: double
          maximum: 5
          minimum: 0
        max_tokens:
          type: integer
          minimum: 1
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_p:
          type: number
          format: double
          maximum: 1
          minimum: 0
        top_k:
          type: number
          format: double
          maximum: 500
          minimum: 0
          default: 0.0
        frequency_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        presence_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
      required:
      - frequency_penalty
      - max_tokens
      - presence_penalty
      - stop
      - temperature
      - top_p
    ModelVersionExecConfigRead:
      type: object
      properties:
        prompt_template:
          type: string
        parameters:
          $ref: '#/components/schemas/ModelVersionExecConfigParameters'
        input_variables:
          type: array
          items:
            type: string
      required:
      - input_variables
      - parameters
      - prompt_template
    ModelVersionExecConfigWriteRequest:
      type: object
      properties:
        prompt_template:
          type: string
          minLength: 1
        parameters:
          $ref: '#/components/schemas/ModelVersionExecConfigParametersRequest'
      required:
      - parameters
      - prompt_template
    ModelVersionRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of task this model is used for.
        provider:
          $ref: '#/components/schemas/ProviderEnum'
          description: Which LLM provider this model version is associated with.
        external_id:
          type: string
          description: The unique id of this model version as it exists in the above
            provider's system.
          maxLength: 250
        build_config:
          $ref: '#/components/schemas/ModelVersionBuildConfig'
        exec_config:
          $ref: '#/components/schemas/ModelVersionExecConfigRead'
      required:
      - build_config
      - created
      - exec_config
      - external_id
      - id
      - label
      - model_type
      - provider
    ModelVersionSandboxSnapshot:
      type: object
      properties:
        id:
          type: string
        prompt_index:
          type: integer
          minimum: 0
      required:
      - id
      - prompt_index
    ModelVersionSandboxSnapshotRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        prompt_index:
          type: integer
          minimum: 0
      required:
      - id
      - prompt_index
    ModelVersionWriteRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of task this model is used for.
        external_id:
          type: string
          minLength: 1
          description: The unique id of this model version as it exists in the above
            provider's system.
          maxLength: 250
        provider:
          $ref: '#/components/schemas/ProviderEnum'
          description: Which LLM provider this model version is associated with.
        build_config:
          $ref: '#/components/schemas/ModelVersionBuildConfigRequest'
        exec_config:
          $ref: '#/components/schemas/ModelVersionExecConfigWriteRequest'
      required:
      - build_config
      - exec_config
      - external_id
      - label
      - model_type
      - provider
    NormalizedLogProbs:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/NormalizedTokenLogProbs'
        likelihood:
          type: number
          format: double
      required:
      - likelihood
      - tokens
    NormalizedTokenLogProbs:
      type: object
      properties:
        token:
          type: string
        logprob:
          type: number
          format: double
          nullable: true
        top_logprobs:
          type: object
          additionalProperties:
            type: number
            format: double
          nullable: true
        text_offset:
          type: integer
      required:
      - logprob
      - text_offset
      - token
      - top_logprobs
    NullEnum:
      enum:
      - null
    OrganizationRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - id
      - name
    OrganizationWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
      required:
      - name
    PaginatedCompletionReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompletionRead'
    PaginatedDeploymentHistoryItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentHistoryItem'
    PaginatedDeploymentReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentRead'
    PaginatedDocumentIndexReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentIndexRead'
    PaginatedDocumentToDocumentIndexList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentToDocumentIndex'
    PaginatedModelVersionReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ModelVersionRead'
    PaginatedProviderCredentialReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProviderCredentialRead'
    PaginatedSandboxReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SandboxRead'
    PaginatedSandboxSnapshotList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SandboxSnapshot'
    PaginatedSandboxTagReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SandboxTagRead'
    PaginatedSlimDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimDocument'
    PaginatedTestSuiteReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRead'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWorkspaceAPIKeyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceAPIKey'
    PaginatedWorkspaceReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceRead'
    PatchedDeploymentUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the deployment
          maxLength: 150
        model_version_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The current status of the deployment
    PatchedDocumentIndexWriteRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document index.
          maxLength: 150
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          $ref: '#/components/schemas/SandboxStatus'
          description: The current status of the document index
    PatchedDocumentUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 150
        status:
          $ref: '#/components/schemas/DocumentStatus'
          description: The current status of the document
    PatchedOrganizationWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
    PatchedProviderCredentialWriteRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        credentials:
          type: object
          additionalProperties: {}
          writeOnly: true
    PatchedSandboxTagWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this tag within its sandbox
          maxLength: 150
        sandbox_id:
          type: string
          format: uuid
    PatchedSandboxWriteRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 150
        status:
          $ref: '#/components/schemas/SandboxStatus'
    PatchedTestSuiteUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the test suite
          maxLength: 150
        metric_config:
          $ref: '#/components/schemas/TestSuiteMetricConfigRequest'
        test_cases:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestCaseRequest'
    PatchedUserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        full_name:
          type: string
          maxLength: 300
    PatchedWorkspaceWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
    ProcessingStateEnum:
      enum:
      - QUEUED
      - PROCESSING
      - PROCESSED
      - FAILED
      type: string
    ProviderCredentialRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        credentials:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - credentials
      - id
      - modified
      - provider
    ProviderCredentialWriteRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        credentials:
          type: object
          additionalProperties: {}
          writeOnly: true
      required:
      - credentials
      - provider
    ProviderEnum:
      enum:
      - OPENAI
      - COHERE
      - ANTHROPIC
      type: string
    SandboxCreatedBy:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type: string
          maxLength: 300
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - email
      - id
    SandboxRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        label:
          type: string
          maxLength: 150
        modified:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/SandboxCreatedBy'
          nullable: true
      required:
      - created
      - created_by
      - id
      - label
      - modified
    SandboxSnapshot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/SandboxSnapshotCreatedBy'
          readOnly: true
          nullable: true
        sandbox:
          $ref: '#/components/schemas/SandboxSnapshotSandbox'
        raw_data:
          $ref: '#/components/schemas/SandboxSnapshotRawData'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SandboxSnapshotTagLink'
      required:
      - created
      - created_by
      - id
      - raw_data
      - sandbox
      - tags
    SandboxSnapshotCompletionMetricResult:
      type: object
      properties:
        score:
          type: number
          format: double
          nullable: true
        normalized_score:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/SandboxSnapshotStatus'
    SandboxSnapshotStatus: 
      oneOf:
      - $ref: '#/components/schemas/EvaluationMetricResultStatus'
      - $ref: '#/components/schemas/NullEnum'
      nullable: true
    SandboxSnapshotCompletionMetricResultRequest:
      type: object
      properties:
        score:
          type: number
          format: double
          nullable: true
        normalized_score:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/SandboxSnapshotStatus'
    SandboxSnapshotCompletionParams:
      type: object
      properties:
        temperature:
          type: number
          format: double
          maximum: 5
          minimum: 0
        max_tokens:
          type: integer
          minimum: 1
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_p:
          type: number
          format: double
          maximum: 1
          minimum: 0
        top_k:
          type: number
          format: double
          maximum: 500
          minimum: 0
          default: 0.0
        frequency_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        presence_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        model:
          type: string
      required:
      - frequency_penalty
      - max_tokens
      - model
      - presence_penalty
      - provider
      - stop
      - temperature
      - top_p
    SandboxSnapshotCompletionParamsRequest:
      type: object
      properties:
        temperature:
          type: number
          format: double
          maximum: 5
          minimum: 0
        max_tokens:
          type: integer
          minimum: 1
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_p:
          type: number
          format: double
          maximum: 1
          minimum: 0
        top_k:
          type: number
          format: double
          maximum: 500
          minimum: 0
          default: 0.0
        frequency_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        presence_penalty:
          type: number
          format: double
          maximum: 2
          minimum: 0
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        model:
          type: string
          minLength: 1
      required:
      - frequency_penalty
      - max_tokens
      - model
      - presence_penalty
      - provider
      - stop
      - temperature
      - top_p
    SandboxSnapshotCreatedBy:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type: string
          maxLength: 300
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - email
      - id
    SandboxSnapshotInput:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
    SandboxSnapshotInputRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
      required:
      - key
      - value
    SandboxSnapshotMetricConfig:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/MetricEnum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - config
      - metric
    SandboxSnapshotMetricConfigRequest:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/MetricEnum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - config
      - metric
    SandboxSnapshotMetricInputParams:
      type: object
      properties:
        params:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - params
    SandboxSnapshotMetricInputParamsRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - params
    SandboxSnapshotPrompt:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
        default_params:
          $ref: '#/components/schemas/SandboxSnapshotCompletionParams'
        is_visible:
          type: boolean
        display_size:
          $ref: '#/components/schemas/SandboxSnapshotPromptDisplaySize'
          nullable: true
      required:
      - default_params
      - id
      - is_visible
      - value
    SandboxSnapshotPromptDisplaySize:
      type: object
      properties:
        width:
          type: integer
          minimum: 0
          nullable: true
        height:
          type: integer
          minimum: 0
          nullable: true
    SandboxSnapshotPromptDisplaySizeRequest:
      type: object
      properties:
        width:
          type: integer
          minimum: 0
          nullable: true
        height:
          type: integer
          minimum: 0
          nullable: true
    SandboxSnapshotPromptRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
        default_params:
          $ref: '#/components/schemas/SandboxSnapshotCompletionParamsRequest'
        is_visible:
          type: boolean
        display_size:
          $ref: '#/components/schemas/SandboxSnapshotPromptDisplaySizeRequest'
          nullable: true
      required:
      - default_params
      - id
      - is_visible
      - value
    SandboxSnapshotRawData:
      type: object
      properties:
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/SandboxSnapshotPrompt'
        inputs:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SandboxSnapshotInput'
        template_variables:
          type: array
          items:
            type: string
        default_params:
          $ref: '#/components/schemas/SandboxSnapshotCompletionParams'
        results:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SandboxSnapshotResult'
        metric_config:
          $ref: '#/components/schemas/SandboxSnapshotMetricConfig'
          nullable: true
        metric_input_params:
          type: array
          items:
            $ref: '#/components/schemas/SandboxSnapshotMetricInputParams'
      required:
      - default_params
      - inputs
      - metric_input_params
      - prompts
      - results
      - template_variables
    SandboxSnapshotRawDataRequest:
      type: object
      properties:
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/SandboxSnapshotPromptRequest'
        inputs:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SandboxSnapshotInputRequest'
        template_variables:
          type: array
          items:
            type: string
            minLength: 1
        default_params:
          $ref: '#/components/schemas/SandboxSnapshotCompletionParamsRequest'
        results:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SandboxSnapshotResultRequest'
        metric_config:
          $ref: '#/components/schemas/SandboxSnapshotMetricConfigRequest'
          nullable: true
        metric_input_params:
          type: array
          items:
            $ref: '#/components/schemas/SandboxSnapshotMetricInputParamsRequest'
      required:
      - default_params
      - inputs
      - metric_input_params
      - prompts
      - results
      - template_variables
    SandboxSnapshotResult:
      type: object
      properties:
        text:
          type: string
        status:
          $ref: '#/components/schemas/SandboxSnapshotStatus'
        error:
          type: string
          nullable: true
        metric_result:
          $ref: '#/components/schemas/SandboxSnapshotCompletionMetricResult'
          nullable: true
      required:
      - text
    SandboxSnapshotResultRequest:
      type: object
      properties:
        text:
          type: string
        status:
          $ref: '#/components/schemas/SandboxSnapshotStatus'
        error:
          type: string
          nullable: true
          minLength: 1
        metric_result:
          $ref: '#/components/schemas/SandboxSnapshotCompletionMetricResultRequest'
          nullable: true
      required:
      - text
    SandboxSnapshotSandbox:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        label:
          type: string
          maxLength: 150
      required:
      - id
      - label
    SandboxSnapshotTagLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        tag_id:
          type: string
        meta:
          type: object
          additionalProperties: {}
          description: Metadata about this tag relationship
      required:
      - id
      - name
      - tag_id
    SandboxSnapshotToSandboxTagRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sandbox_snapshot_id:
          type: string
          format: uuid
        sandbox_tag:
          $ref: '#/components/schemas/SandboxSnapshotToSandboxTagSandboxTag'
        meta:
          type: object
          additionalProperties: {}
          description: Metadata about this tag relationship
      required:
      - id
      - sandbox_snapshot_id
      - sandbox_tag
    SandboxSnapshotToSandboxTagSandboxTag:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: A name that uniquely identifies this tag within its sandbox
          maxLength: 150
      required:
      - id
      - name
    SandboxSnapshotToSandboxTagWriteRequest:
      type: object
      properties:
        sandbox_snapshot_id:
          type: string
          format: uuid
        sandbox_tag_name:
          type: string
          minLength: 1
          maxLength: 150
        meta:
          type: object
          additionalProperties: {}
          description: Metadata about this tag relationship
      required:
      - sandbox_snapshot_id
      - sandbox_tag_name
    SandboxSnapshotWriteRequest:
      type: object
      properties:
        sandbox_id:
          type: string
          format: uuid
        raw_data:
          $ref: '#/components/schemas/SandboxSnapshotRawDataRequest'
      required:
      - raw_data
      - sandbox_id
    SandboxStatus:
      enum:
      - ACTIVE
      - ARCHIVED
      type: string
    SandboxTagRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: A name that uniquely identifies this tag within its sandbox
          maxLength: 150
        sandbox_id:
          type: string
          format: uuid
          description: The sandbox this tag belongs to
          readOnly: true
      required:
      - id
      - name
      - sandbox_id
    SandboxTagWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this tag within its sandbox
          maxLength: 150
        sandbox_id:
          type: string
          format: uuid
      required:
      - name
      - sandbox_id
    SandboxWriteRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 150
        status:
          $ref: '#/components/schemas/SandboxStatus'
      required:
      - label
    SearchErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    SearchRequestBodyRequest:
      type: object
      properties:
        index_id:
          type: string
          format: uuid
          nullable: true
        index_name:
          type: string
          nullable: true
          minLength: 1
        query:
          type: string
          minLength: 1
        options:
          $ref: '#/components/schemas/SearchRequestOptionsRequest'
          nullable: true
      required:
      - query
    SearchRequestOptionsRequest:
      type: object
      properties:
        limit:
          type: integer
          nullable: true
        weights:
          $ref: '#/components/schemas/SearchWeightsRequest'
          nullable: true
    SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
      required:
      - results
    SearchResult:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        text:
          type: string
        keywords:
          type: array
          items:
            type: string
        score:
          type: number
          format: double
      required:
      - document
      - keywords
      - score
      - text
    SearchWeightsRequest:
      type: object
      properties:
        semantic_similarity:
          type: number
          format: double
        keywords:
          type: number
          format: double
      required:
      - keywords
      - semantic_similarity
    SlimDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          nullable: true
          description: The unique id of this document as it exists in the user's system.
            If not provided, will be set to the document's id.
          maxLength: 250
        last_uploaded_at:
          type: string
          format: date-time
        label:
          type: string
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 150
        processing_state:
          $ref: '#/components/schemas/ProcessingStateEnum'
          description: The current processing state of the document
        status:
          $ref: '#/components/schemas/DocumentStatus'
          description: The current status of the document
        document_to_document_indexes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDocumentToDocumentIndex'
      required:
      - document_to_document_indexes
      - id
      - label
      - last_uploaded_at
    SubmitCompletionActualRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
          minLength: 1
        external_id:
          type: string
          nullable: true
          minLength: 1
        text:
          type: string
          nullable: true
        quality:
          type: number
          format: double
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
    SubmitCompletionActualsErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    SubmitCompletionActualsRequestRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
        deployment_name:
          type: string
          nullable: true
          minLength: 1
        actuals:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCompletionActualRequest'
      required:
      - actuals
    TestSuiteCreateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the test suite
          maxLength: 150
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this test suite within its
            workspace
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of model this test suite is meant to evaluate
        metric_config:
          $ref: '#/components/schemas/TestSuiteMetricConfigRequest'
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteInputVariableRequest'
        test_cases:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestCaseRequest'
      required:
      - input_variables
      - label
      - metric_config
      - model_type
      - name
      - test_cases
    TestSuiteInputVariable:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    TestSuiteInputVariableRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
      required:
      - key
    TestSuiteMetricConfig:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/MetricEnum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - config
      - metric
    TestSuiteMetricConfigRequest:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/MetricEnum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - config
      - metric
    TestSuiteRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        label:
          type: string
          description: A human-readable label for the test suite
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this test suite within its
            workspace
          maxLength: 150
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The type of model this test suite is meant to evaluate
        metric_config:
          $ref: '#/components/schemas/TestSuiteMetricConfig'
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteInputVariable'
        test_cases:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestCase'
      required:
      - id
      - input_variables
      - label
      - metric_config
      - model_type
      - name
      - test_cases
    TestSuiteTestCase:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        input_values:
          type: object
          additionalProperties: {}
        evaluation_params:
          type: object
          additionalProperties: {}
      required:
      - evaluation_params
      - id
      - input_values
    TestSuiteTestCaseRequest:
      type: object
      properties:
        input_values:
          type: object
          additionalProperties: {}
        evaluation_params:
          type: object
          additionalProperties: {}
      required:
      - evaluation_params
      - input_values
    TestSuiteUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the test suite
          maxLength: 150
        metric_config:
          $ref: '#/components/schemas/TestSuiteMetricConfigRequest'
        test_cases:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestCaseRequest'
      required:
      - label
      - metric_config
      - test_cases
    ThemeModeEnum:
      enum:
      - light
      - dark
      type: string
    UploadDocumentErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    UploadDocumentRequestBodyRequest:
      type: object
      properties:
        add_to_index_names:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
        external_id:
          type: string
          nullable: true
          minLength: 1
        label:
          type: string
          minLength: 1
        contents:
          type: string
          format: binary
        keywords:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
      required:
      - contents
      - label
    UploadDocumentResponse:
      type: object
      properties:
        document_id:
          type: string
          format: uuid
      required:
      - document_id
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        full_name:
          type: string
          maxLength: 300
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - url
      - username
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        full_name:
          type: string
          maxLength: 300
      required:
      - username
    WorkspaceAPIKey:
      type: object
      properties:
        prefix:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: A free-form name for the API key. Need not be unique. 50 characters
            max.
          maxLength: 50
      required:
      - created
      - prefix
    WorkspaceAPIKeyCreateRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    WorkspaceAPIKeyCreateResponse:
      type: object
      properties:
        api_key:
          type: string
      required:
      - api_key
    WorkspaceRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the Workspace.
          maxLength: 150
        label:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - label
      - name
    WorkspaceWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
      required:
      - name
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X_API_KEY
      description: API key based authentication
    jwtTokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: https://api.vellum.ai
  x-server-name: Production
